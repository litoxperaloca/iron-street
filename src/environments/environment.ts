export const environment = {
  snapServiceConf:{
    maxValidAccuracy:15,
    distanceToConsiderMovementInMeters:5,
    maxValidHeadingChangeInDeg: 35,
    speedThreeholdForHeadingTop: 50,
    maxValidHeadingChangeInDegForTopSpeedThreehold: 30,
    speedThreeholdForHeadingBottom:10,
    maxValidHeadingChangeInDegForBottomSpeedThreehold: 10,
    maxValidHeadingChangeDefault:20,
    minValidSpeedForMovement: 5
  },
  locatorDefault: {
    type: 'gltf',
    obj: '/assets/models/car_arrow.glb',
    scale: 6,
    units: 'meters',
    anchor: "top",
    rotation: { x: 270, y: 0, z: 0 }
  },
  locators: [
    
    {
      img: '/assets/img/cars/car_arrow.png',
      name: 'Fecla roja',
      id: 'redarrow',
      type: '3D',
      vehicleType: 'arrow',
      options: {
        type: 'gltf',
        obj: '/assets/models/car_arrow.glb',
        scale: 6,
        units: 'meters',
        anchor: "top",
        rotation: { x: 270, y: 0, z: 0 }
      }
    },
    {
      img: '/assets/img/cars/car.png',
      name: 'Auto rojo',
      id: 'car',
      type: '3D',
      vehicleType: 'car',
      options: {
        type: 'gltf',
        obj: '/assets/models/car.glb',
        scale: 2,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 0, z: 0 }
      }
    },
    {
      img: '/assets/img/cars/1949_-_cadillac_series_62.png',
      name: 'Cadillac',
      id: '1949_-_cadillac_series_62',
      type: '3D',
      vehicleType: 'car',
      options: {
        type: 'gltf',
        obj: '/assets/models/1949_-_cadillac_series_62.glb',
        scale: 9,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 0, z: 0 }
      }
    },
    {
      img: '/assets/img/cars/bumble_bee.png',
      name: 'Fusca',
      id: 'bumble_bee',
      type: '3D',
      vehicleType: 'car',
      options: {
        type: 'gltf',
        obj: '/assets/models/bumble_bee.glb',
        scale: 9,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 0, z: 0 }
      }
    },
    {
      img: '/assets/img/cars/izh-2715-pickup.png',
      name: 'Pickup',
      id: 'izh-2715-pickup',
      type: '3D',
      vehicleType: 'car',
      options: {
        type: 'gltf',
        obj: '/assets/models/izh-2715-pickup.glb',
        scale: 9,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 0, z: 0 }
      }
    },
    {
      img: '/assets/img/motorbikes/moto_vespa.png',
      name: 'Vespa',
      id: 'moto_vespa',
      type: '3D',
      vehicleType: 'motorbike',
      options: {
        type: 'gltf',
        obj: '/assets/models/moto_vespa.glb',
        scale: 14,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 180, z: 0 }
      }
    },
    {
      img: '/assets/img/motorbikes/motorcycle_harley_davidson_fat_boy.png',
      name: 'Harley',
      id: 'motorcycle_harley_davidson_fat_boy',
      type: '3D',
      vehicleType: 'motorbike',
      options: {
        type: 'gltf',
        obj: '/assets/models/motorcycle_harley_davidson_fat_boy.glb',
        scale: 14,
        units: 'meters',
        anchor: "top",
        rotation: { x: 90, y: 0, z: 0 }
      }
    }
  ],
  production: true,
  mocking: false,
  trafficAlertServiceConf: {
    alertables:[
      {
        type: 'speedCamera',
        preAnnounce: true,
        preAnnouncement: 'En {distance}, cámara de velocidad. Máximo {modifier} kilómetros por hora.',
        preAnnouncementDistance: 500,
        announce: true,
        announcement: 'Cámara de velocidad cerca',
        announcementDistance: 80,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        icon: '/assets/img/map-icons/ironcamera2.png',
        speak: true,
        screenAlert: true,
        priority: 1
      }
    ]
  },
  tripserviceConf: {
    maneuvers: [
      {
        maneuverType: 'depart',
        preAnnounce: false,
        preAnnouncement: '',
        preAnnouncementDistance: 0,
        announce: true,
        announcement: 'Para comenzar el viaje, {instruction}',
        announcementDistance: 0,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/depart-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 1
      },
      {
        maneuverType: 'turn',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/turn-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'end of road',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, llegando al final de esta calle, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/end-of-road-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'new name',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/new-name-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'merge',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, presta atención, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/merge-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'on ramp',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/on-ramp-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'off ramp',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/off-ramp-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'fork',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, {instruction}.',
        preAnnouncementDistance: 0,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/fork-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'continue',
        preAnnounce: false,
        preAnnouncement: '',
        preAnnouncementDistance: 0,
        announce: true,
        announcement: 'A continuación, {instruction} aproximadamente {distanceToNextStep} metros.',
        announcementDistance: 10,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/continue-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'notification',
        preAnnounce: true,
        preAnnouncement: 'Atención: En {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}.',
        announcementDistance: 20,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/notification-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 1
      },
      {
        maneuverType: 'roundabout',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, entre en la rotonda y tome la salida {exit}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: 'Tome la salida {exit}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/roundabout-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'rotary',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, entre en la glorieta {rotary_name} y tome la salida {exit}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: 'Tome la salida {exit}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/rotary-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'roundabout turn',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, gire en la rotonda y tome la salida {exit}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: 'Tome la salida {exit}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/roundabout-turn-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'exit roundabout',
        preAnnounce: true,
        preAnnouncement: 'En {distance}, salga de la rotonda en la salida {exit}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: 'Salga de la rotonda en la salida {exit}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/exit-roundabout-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'exit rotary',
        preAnnounce: true,
        preAnnouncement: 'En {distance} metros, salga de la glorieta en la salida {exit}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: 'Salga de la glorieta en la salida {exit}.',
        announcementDistance: 50,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/exit-rotary-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: false,
        maneuverPriority: 2
      },
      {
        maneuverType: 'arrive',
        preAnnounce: true,
        preAnnouncement: 'Buenas noticias: en {distance} metros, {instruction}.',
        preAnnouncementDistance: 200,
        announce: true,
        announcement: '{instruction}. Viaje completado',
        announcementDistance: 20,
        announceAsNextInmediatly: false,
        announceAsNextInmediatlyAnnouncement: '',
        announceAsNextInmediatlyAnnouncementDistance: 0,
        maneuverIconUrl: 'path/to/arrive-icon.png',
        maneuverSpeak: true,
        maneuverScreenAlert: true,
        maneuverPriority: 3
      }
    ],
    deviationThreshold:50
  },
  blogConfig: {
    "wpApiKey": "wy1G 60Xi OQ1z 4VA7 o8JN GVLJ",
    "wpUrl": "https://ironplatform.com.uy/wp-json/wp/v2",
    "wpIronStreetCategory": 2,
    "wpIronStreetTag": 3,
    "wpIronStreetWelcomeCategoryId": 85
  },
  osmApiConfig: {
    radioDistanceForInitialData: 25,
    minimunDistanceToBboxContainerDataBorder: 3,
    urlToCustomGeoJsonApi: 'https://overpass-api.de/api/interpreter',
    urlToAllNearDataApi: 'https://api.openstreetmap.org/api/0.6/map?bbox=',
    maxspeedsQuerySelector: '[out:json][timeout:300];wr["highway"]',
    placesSelector: '[out:json][timeout:6666];nwr',
    outputQueryGeom: 'out geom;',
    osmGeocoderEndpoint: 'https://nominatim.openstreetmap.org/search?q='
  },
  mapboxUserMarkerOptions: {
    positionOptions: {
      enableHighAccuracy: true,
      maximumAge: 0,
      timeout: 6000 /* 6 sec */
    },
    fitBoundsOptions: {
      maxZoom: 15
    },
    trackUserLocation: false,
    showAccuracyCircle: false,
    showUserLocation: true,
    showUserHeading: true
  },
  mapboxMapConfig: {
    accessToken: 'pk.eyJ1IjoibGl0b3hwZXJhbG9jYSIsImEiOiJjbGc3ZW95OGQwNXRtM2V0bHM3ZTcwajVmIn0.rZXdOoZoUFuJ2K4eFyxamg',
    container: 'mapbox',
    style: "mapbox://styles/mapbox/standard",
    //style: "mapbox://styles/litoxperaloca/clun8375j04km01nwcqa93oq7",
    zoom: 0,
    minZoom: 0,
    center: [0, 0],
    pitch: 0,
    bearing: 0,
    hash: false,
    performanceMetricsCollection: false,
    attributionControl: true,
    maxZoom: 20,
    maxPitch: 55,
    projection: 'globe',
    antialias: false
  },
  mapboxStylesURLs: {
    '3DMapboxStandard': 'mapbox://styles/mapbox/standard',
    '3DIronStreetDefaultDark': 'mapbox://styles/litoxperaloca/clixdgfzd02ih01p63ec51eu0',
    '3DIronStreetDefaultLight': 'mapbox://styles/litoxperaloca/clixno03g02k901p6agjg4lgd',
    '3DIronStreetCyberPunk': 'mapbox://styles/litoxperaloca/clg6s2tmm00bg01mqol1454ui',
    '3DIronStreetRedRoadsDark': 'mapbox://styles/litoxperaloca/clddmyslc002x01ry4jkrnuvx',
    '3DMapBoxDefaultNavigationDark': 'mapbox://styles/litoxperaloca/clixfsndj02fc01qpgf3x1qwk',
    '2DIronStreetDefaultDark': 'mapbox://styles/litoxperaloca/clixeoyvx02jm01pdcnzl0u8j',
    '2DIronStreetDefaultLight': 'mapbox://styles/litoxperaloca/cliybywv002lj01qpcimhb07l',
    '2DIronStreetCyberPunk': 'mapbox://styles/litoxperaloca/clixfhf2f02it01p6cm5efk6e',
    '2DIronStreetRedRoadsDark': 'mapbox://styles/litoxperaloca/clixfmy1c02go01qpbbdp1lbl',
    '2DMapBoxDefaultStellite': 'mapbox://styles/litoxperaloca/clixnhtko00bx01qqdk95ebfa'
  },
  mapboxControlStyleList: [
    {
      title: '3DMapboxStandard',
      uri: 'mapbox://styles/mapbox/standard',
    }, {
      title: '3DIronStreetDefaultDark',
      uri: 'mapbox://styles/litoxperaloca/clixdgfzd02ih01p63ec51eu0',
    }, {
      title: '3DIronStreetDefaultLight',
      uri: 'mapbox://styles/litoxperaloca/clixno03g02k901p6agjg4lgd',
    }, {
      title: '3DIronStreetCyberPunk',
      uri: 'mapbox://styles/litoxperaloca/clg6s2tmm00bg01mqol1454ui',
    }, {
      title: '3DIronStreetRedRoadsDark',
      uri: 'mapbox://styles/litoxperaloca/clddmyslc002x01ry4jkrnuvx',
    }, {
      title: '3DMapBoxDefaultNavigationDark',
      uri: 'mapbox://styles/litoxperaloca/clixfsndj02fc01qpgf3x1qwk',
    }, {
      title: '2DIronStreetDefaultDark',
      uri: 'mapbox://styles/litoxperaloca/clixeoyvx02jm01pdcnzl0u8j',
    }, {
      title: '2DIronStreetDefaultLight',
      uri: 'mapbox://styles/litoxperaloca/cliybywv002lj01qpcimhb07l',
    }, {
      title: '2DIronStreetCyberPunk',
      uri: 'mapbox://styles/litoxperaloca/clixfhf2f02it01p6cm5efk6e',
    }, {
      title: '2DIronStreetRedRoadsDark',
      uri: 'mapbox://styles/litoxperaloca/clixfmy1c02go01qpbbdp1lbl',
    }, {
      title: '2DMapBoxDefaultStellite',
      uri: 'mapbox://styles/litoxperaloca/clixnhtko00bx01qqdk95ebfa',
    },

  ],
  mapboxControlStylesConf: {
    defaultStyle: "3DMapboxStandard",
    eventListeners: {},
  },
  mapBoxControlGeolocateConfig: {
    positionOptions: {
      enableHighAccuracy: true
    },
    trackUserLocation: true,
    showUserHeading: true,
    showAccuracyCircle: false,
    travelInProgress: false
  },
  mapboxControlDirectionsConfig: {
    accessToken: 'pk.eyJ1IjoibGl0b3hwZXJhbG9jYSIsImEiOiJjbGc3ZW95OGQwNXRtM2V0bHM3ZTcwajVmIn0.rZXdOoZoUFuJ2K4eFyxamg',
    interactive: false,
    profile: "mapbox/driving-traffic",
    unit: "metric",
    language: "es-ES",
    alternatives: true,
    annotations: "maxspeed, distance, duration, congestion, closure",
    banner_instructions: true,
    geometries: "polyline",
    overview: "full",
    steps: true,
    continue_straight: true,
    roundabout_exits: true,
    waypoints_per_route: true,
    coordinates: [-56.147969, -34.88154],
    waypoint_names: "a,b,c",
    voice_instructions: true,
    voice_units: "metric",
    engine: "electric_no_recharge",
    notifications: "all",
    placeholderDestination: "Destino",
    placeholderOrigin: "Origen",
    instructions: {
      showWaypointInstructions: true,
    },
    controls: {
      instructions: true,
      inputs: true,
      profileSwitcher: false
    },
    zoom: 15,
    routePadding: 150,
    congestion: true,
    flyTo: true,
    geocoder: undefined
  },
  mapboxControlNavConfig: {
    visualizePitch: true,
    voiceInstructions: true
  },
  mapboxControlSearchConfig: {
    accessToken: 'pk.eyJ1IjoibGl0b3hwZXJhbG9jYSIsImEiOiJjbGc3ZW95OGQwNXRtM2V0bHM3ZTcwajVmIn0.rZXdOoZoUFuJ2K4eFyxamg',
    mapboxgl: null,
    countries: "uy",
    language: "es",
    placeholder: "Buscar...",
    autocomplete: true
  },
  firebaseConfig: {
    apiKey: "AIzaSyDBjRvntQjArNGIWjboRX7jFYUUMCAkj_4",
    authDomain: "key-scarab-426901-c0.firebaseapp.com",
    databaseURL: "https://key-scarab-426901-c0-default-rtdb.firebaseio.com",
    projectId: "key-scarab-426901-c0",
    storageBucket: "key-scarab-426901-c0.appspot.com",
    messagingSenderId: "86900265970",
    appId: "1:86900265970:web:4d7214adffc007642c916b",
    measurementId: "G-K1X1ZY79X2"
  },
  recaptcha: {
    key: '6LcUFakmAAAAADV6XQHjGkpkkPj4MsCpm_g3fdVm',
    secret: '6LcUFakmAAAAAB11GNciqZEOTh5zpQkry-m-nt1w',
  },
  firebaseFunctionsUrl: 'https://us-central1-key-scarab-426901-c0.cloudfunctions.net',
  openai: {
    key: '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',
    organization: 'IronPlatform',
    organizationId: 'org-IWywnjX9Isu2YYfgRwBooytZ'
  },
  ironUiConfig: {
    categories: [
      // Continuing from other categories already defined...
      {
        name: 'Estaciones de servicio',
        icon: 'water-outline', // Suggest using an appropriate icon
        type: '["amenity"="fuel"]',
        marker: 'ironfuel',
        labelPropertyIndex: 'brand',
        props: {
          "brand": "Marca",
          "brand:wikidata": "Wikidata",
          "name": "Nombre",
          "operator": "Operador",
          "addr:*": "Dirección",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "fuel:diesel": "Diesel",
          "fuel:octane_95": "Nafta 95",
          "fuel:octane_98": "Nafta 98",
          "fuel:lpg": "Gas licuado de petróleo",
          "fuel:cng": "Gas natural comprimido",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "fuel:octane_91": "Nafta 91",
          "fuel:octane_92": "Nafta 92",
          "fuel:octane_93": "Nafta 93",
          "fuel:octane_94": "Nafta 94",
          "fuel:octane_96": "Nafta 96",
          "fuel:octane_97": "Nafta 97",
          "fuel:octane_99": "Nafta 99",
          "fuel:octane_100": "Nafta 100",
          "amenity": "Tipo de estación",
          "compressed_air": "Aire comprimido",
          "ursea:cod_estacion": "Código de estación"
        },

      },
      {
        name: 'Puntos de carga (motores eléctricos)',
        icon: 'battery-charging-outline', // Specific icon for charging stations
        type: '["amenity"="charging_station"]',
        marker: 'ironcharge',
        labelPropertyIndex: 'name',
        props: {
          "amenity": "Tipo de estación",
          "name": "nombre",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "socket:type2": "Tipo de enchufe",
          "socket:output": "Potencia de salida",
          "socket:voltage": "Voltaje",
          "socket:amperage": "Amperaje",
          "socket:mode3": "Modo 3",
          "socket:mode4": "Modo 4",
          "socket:chademo": "CHAdeMO",
          "socket:ccs": "CCS",
          "socket:type1": "Tipo 1",
          "socket:tesla_supercharger": "Supercharger Tesla",
          "socket:tesla_chademo": "CHAdeMO Tesla",
          "socket:tesla_ccs": "CCS Tesla",
          "socket:tesla_type2": "Tipo 2 Tesla",
          "socket:tesla_type1": "Tipo 1 Tesla",
          "socket:tesla_blue": "Tesla Blue",
          "socket:tesla_red": "Tesla Red",
          "socket:tesla_green": "Tesla Green",
          "socket:tesla_gray": "Tesla Gray",
          "socket:tesla_black": "Tesla Black",
          "socket:tesla_white": "Tesla White",
          "socket:tesla_yellow": "Tesla Yellow",
          "socket:tesla_purple": "Tesla Purple",
          "socket:tesla_orange": "Tesla Orange",
          "socket:tesla_pink": "Tesla Pink",
          "socket:tesla_light_blue": "Tesla Light Blue",
          "socket:tesla_light_green": "Tesla Light Green",
          "socket:tesla_light_gray": "Tesla Light Gray",
          "socket:tesla_light_black": "Tesla Light Black",
          "socket:tesla_light_white": "Tesla Light White",
          "socket:tesla_light_yellow": "Tesla Light Yellow",
          "socket:tesla_light_purple": "Tesla Light Purple",
          "socket:tesla_light_orange": "Tesla Light Orange",
          "socket:tesla_light_pink": "Tesla Light Pink",
          "socket:tesla_dark_blue": "Tesla Dark Blue",
          "socket:tesla_dark_green": "Tesla Dark Green",
          "socket:tesla_dark_gray": "Tesla Dark Gray",
          "socket:tesla_dark_black": "Tesla Dark Black",
          "socket:tesla_dark_white": "Tesla Dark White",
          "socket:tesla_dark_yellow": "Tesla Dark Yellow",
          "socket:tesla_dark_purple": "Tesla Dark Purple",
          "socket:tesla_dark_orange": "Tesla Dark Orange",
          "socket:tesla_dark_pink": "Tesla Dark Pink",
          "socket:tesla_medium_blue": "Tesla Medium Blue",
          "socket:tesla_medium_green": "Tesla Medium Green",
          "socket:tesla_medium_gray": "Tesla Medium Gray",
          "socket:tesla_medium_black": "Tesla Medium Black",
          "socket:tesla_medium_white": "Tesla Medium White",
          "socket:tesla_medium_yellow": "Tesla Medium Yellow",
          "socket:tesla_medium_purple": "Tesla Medium Purple",
          "socket:tesla_medium_orange": "Tesla Medium Orange",
          "socket:tesla_medium_pink": "Tesla Medium Pink",
        },
      },
      {
        name: 'Alquiler de automóviles',
        icon: 'car-outline', // Icon that suggests car rental
        type: '["amenity"="car_rental"]',
        marker: 'ironrentcar',
        labelPropertyIndex: 'name',
        props: {
          "amenity": "Tipo de alquiler",
          "name": "nombre",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "rental:bicycle": "Alquiler de bicicletas",
          "rental:car": "Alquiler de autos",
          "rental:truck": "Alquiler de camiones",
          "rental:motorcycle": "Alquiler de motocicletas",
          "rental:boat": "Alquiler de botes",
          "rental:helicopter": "Alquiler de helicópteros",
          "rental:plane": "Alquiler de aviones",
          "rental:equipment": "Alquiler de equipamiento",
          "rental:ski": "Alquiler de esquíes",
          "rental:snowboard": "Alquiler de snowboards",
          "rental:scuba": "Alquiler de equipos de buceo",
          "rental:diving": "Alquiler de equipos de buceo",
          "rental:canoe": "Alquiler de canoas",
          "rental:kayak": "Alquiler de kayaks",
          "rental:surfboard": "Alquiler de tablas de surf",
          "rental:skates": "Alquiler de patines"
        },
      },
      {
        name: 'Estacionamientos',
        icon: 'car-park-outline', // Use an icon that represents parking
        type: '["amenity"="parking"]',
        marker: 'ironparking',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "amenity": "Tipo de estacionamiento",
          "capacity": "Capacidad",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "parking:condition": "Estado del estacionamiento",
          "parking:access": "Acceso",
          "parking:fee": "Tarifa",
          "parking:payment": "Formas de pago",
          "parking:height": "Altura máxima",
          "parking:width": "Ancho máximo",
          "parking:length": "Largo máximo",
          "parking:area": "Área",
          "parking:covered": "Cubierto",
          "parking:surface": "Superficie",
          "parking:level": "Nivel",
          "parking:lane": "Carril",
          "parking:spaces": "Espacios",
          "parking:disabled": "Discapacitados",
          "parking:bicycle": "Estacionamiento de bicicletas",
          "parking:motorcycle": "Estacionamiento de motocicletas",
          "parking:car": "Estacionamiento de autos",
          "parking:truck": "Estacionamiento de camiones",
          "parking:boat": "Estacionamiento de botes"
        },
      },
      {
        name: 'Compras',
        icon: 'cart-outline',
        type: '["shop"~"supermarket|clothes|electronics|furniture|sports|bicycle|books"]',
        marker: 'ironshop',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "shop": "Tipo de tienda",
          "amenity": "Tipo",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:bitcoin": "Pago con Bitcoin",
          "payment:apple_pay": "Pago con Apple Pay",
          "payment:google_pay": "Pago con Google Pay",
          "payment:samsung_pay": "Pago con Samsung Pay",
          "payment:paypal": "Pago con PayPal",
          "payment:alipay": "Pago con Alipay"
        },
      },
      {
        name: 'Salud',
        icon: 'medkit-outline',
        type: '["amenity"~"hospital|clinic|pharmacy|veterinary"]',
        marker: 'ironmed',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "amenity": "Tipo de institución",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "healthcare:speciality": "Especialidad",
          "healthcare:speciality:1": "Especialidad 1",
          "healthcare:speciality:2": "Especialidad 2",
          "healthcare:speciality:3": "Especialidad 3",
          "healthcare:speciality:4": "Especialidad 4",
          "healthcare:speciality:5": "Especialidad 5",
          "healthcare:speciality:6": "Especialidad 6",
          "healthcare:speciality:7": "Especialidad 7",
          "healthcare:speciality:8": "Especialidad 8",
          "healthcare:speciality:9": "Especialidad 9",
          "healthcare:speciality:10": "Especialidad 10",
          "healthcare:speciality:11": "Especialidad 11",
          "healthcare:speciality:12": "Especialidad 12",
          "healthcare:speciality:13": "Especialidad 13",
          "healthcare:speciality:14": "Especialidad 14",
          "healthcare:speciality:15": "Especialidad 15",
        },
      },
      {
        name: 'Educación y Cultura',
        icon: 'school-outline',
        type: '["amenity"~"school|college|university|library|museum|arts_centre|theatre|cinema"]',
        marker: 'ironedu',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "amenity": "Tipo de institución",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "education:level": "Nivel educativo",
          "education:language": "Idioma",
          "education:boarding": "Internado",
        },
      },
      {
        name: 'Servicios Financieros',
        icon: 'cash-outline',
        type: '["amenity"~"bank|atm"]',
        marker: 'ironcash',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "amenity": "Tipo",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:bitcoin": "Pago con Bitcoin"
        },
      },
      {
        name: 'Emergencias, Policía',
        icon: 'alert-circle-outline',
        type: '["amenity"="police"]',
        marker: 'ironpolice',
        labelPropertyIndex: 'name',
        props: {
          "amenity": "Tipo de institución",
          "name": "nombre",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "emergency": "Emergencias",
          "police": "Policía",
          "fire_station": "Estación de bomberos",
          "ambulance_station": "Estación de ambulancias"
        },
      },
      {
        name: 'Deporte y Recreación',
        icon: 'football-outline',
        type: '["sport"~"soccer|basketball|tennis"]',
        marker: 'ironsport',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "sport": "Deporte",
          "surface": "Superficie",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "fee": "Tarifa",
          "lighting": "Iluminación",
          "access": "Acceso",
          "wheelchair": "Accesible para sillas de ruedas",
          "toilets": "Baños",
          "changing_rooms": "Vestuarios",
          "showers": "Duchas",
          "drinking_water": "Agua potable",
          "parking": "Estacionamiento",
          "seats": "Asientos",
          "covered": "Cubierto",
          "amenity": "Tipo de instalación",
          "leisure": "Tipo de recreación",
        },
      },
      {
        name: 'Alojamiento',
        icon: 'bed-outline',
        type: '["tourism"~"hotel|hostel|motel|camp_site|shelter"]',
        marker: 'ironguesthouse',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "tourism": "Tipo de alojamiento",
          "stars": "Estrellas",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "check_in": "Hora de check-in",
          "check_out": "Hora de check-out",
          "fee": "Tarifa",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:bitcoin": "Pago con Bitcoin",
          "amenity": "Tipo de alojamiento",
          "leisure": "Tipo de recreación",
          "shelter": "Refugio",
          "motel": "Motel",
          "hostel": "Hostel",
          "hotel": "Hotel",
          "camp_site": "Camping",
          "guest_house": "Casa de huéspedes",
          "apartment": "Apartamento",
          "chalet": "Cabaña",
          "alpine_hut": "Refugio alpino",
          "wilderness_hut": "Refugio de montaña",
          "caravan_site": "Caravana",
          "cabin": "Cabaña",
          "bungalow": "Bungalow",
          "resort": "Resort",
          "inn": "Posada",
          "bed_and_breakfast": "Bed and Breakfast",
          "camping": "Camping",
        },

      },
      {
        name: 'Alimentación',
        icon: 'restaurant-outline',
        type: '["amenity"~"restaurant|cafe|bar|pub|nightclub|fast_food|food_court"]',
        marker: 'ironfood',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "cuisine": "Tipo de cocina",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "contact:phone": "Teléfono de contacto",
          "opening_hours": "Horario de atención",
          "takeaway": "Takeaway",
          "delivery": "Envío a domicilio",
          "fee": "Tarifa",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:credit_card": "Pago con tarjeta de crédito",
          "payment:credit_cards": "Pago con tarjetas de crédito",
          "payment:debit_cards": "Pago con tarjetas de débito",
          "payment:debit_card": "Pago con tarjeta de débito",
          "source": "Esta información se obtuvo de la siguiente fuente:",
          "smoking": "Permitido fumar",
          "internet_access": "Acceso a internet",
          "drive_through": "Drive-through",
          "outdoor_seating": "Asientos al aire libre",
          "check_date": "Fecha de inspección",
          "check_level": "Nivel de inspección",
          "check_result": "Resultado de inspección",
          "check_up": "Inspección",
          "fee:cash": "Tarifa en efectivo",
          "fee:card": "Tarifa con tarjeta",
          "fee:bitcoin": "Tarifa con Bitcoin",
          "brand": "Marca",
          "brand:wikidata": "Wikidata",
          "brand:wikipedia": "Wikipedia",
          "payment:bitcoin": "Pago con Bitcoin",
          "amenity": "Tipo de establecimiento",
          "restaurant": "Restaurante",
          "cafe": "Cafetería",
          "bar": "Bar",
          "pub": "Pub",
          "nightclub": "Discoteca",
          "fast_food": "Comida rápida",
          "food_court": "Patio de comidas",
          "bakery": "Panadería",
          "butcher": "Carnicería",
          "confectionery": "Confitería",
          "ice_cream": "Heladería",
          "beverages": "Bebidas",
          "food": "Comida",
          "greengrocer": "Verdulería",
          "deli": "Rotisería",
          "supermarket": "Supermarket",
          "kiosk": "Kiosko",
          "marketplace": "Mercado",
          "wine": "Vinos",
          "alcohol": "Alcohol",
          "drinking_water": "Agua potable",
          "water": "Agua",
          "tea": "Té",
          "coffee": "Café",
          "juice": "Jugos",
          "description": "Descripción",
          "diet:vegan": "Vegano",
          "diet:vegetarian": "Vegetariano",
          "diet:gluten_free": "Libre de gluten",
          "diet:organic": "Orgánico",
          "diet:halal": "Halal",
          "diet:kosher": "Kosher",
          "diet:low_fat": "Bajo en grasas",
          "diet:low_salt": "Bajo en sal",
          "diet:low_sugar": "Bajo en azúcar",
          "diet:diabetic": "Diabético",
          "diet:low_carb": "Bajo en carbohidratos",
          "diet:raw": "Crudo",
          "diet:high_fiber": "Alto en fibra",
          "diet:high_protein": "Alto en proteínas",
          "diet:low_calorie": "Bajo en calorías"
        },
      },
      {
        name: 'Teatros',
        icon: 'musical-notes-outline', // Suggests performance arts
        type: '["amenity"="theatre"]',
        marker: 'irontheatre',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "theatre:genre": "Género teatral",
          "theatre:type": "Tipo de teatro",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "fee": "Tarifa",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:bitcoin": "Pago con Bitcoin"
        },
      },
      {
        name: 'Cines',
        icon: 'film-outline', // Directly related to movies
        type: '["amenity"="cinema"]',
        marker: 'ironcine',
        labelPropertyIndex: 'name',
        props: {
          "name": "nombre",
          "cinema:genre": "Género cinematográfico",
          "cinema:type": "Tipo de cine",
          "operator": "Operador",
          "addr:*": "Dirección",
          "addr:city": "Ciudad",
          "addr:country": "País",
          "addr:housenumber": "Número de puerta",
          "addr:state": "Departamento",
          "addr:street": "Calle",
          "website": "Sitio web",
          "phone": "Teléfono",
          "opening_hours": "Horario de atención",
          "fee": "Tarifa",
          "payment:cash": "Pago en efectivo",
          "payment:card": "Pago con tarjeta",
          "payment:bitcoin": "Pago con Bitcoin"
        },
      }
    ]
  }

};